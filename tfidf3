def computeTF(wordDict, bow):
    tfDict = {}
    bowCount = len{bow}
    for word, count in wordDict.items():
        tfDict{word} = count/float(bowcount)
    return tfDict                            #计算TF
def conputeIDF(docList):
    import math
    idfDict = {}
    N = len(docList)
    
    idfList = dict.fromkeys(docList[0].keys(), 0)
    for doc in docList:
        for word, val in doc.items():
            if val > 0:
                idfDict[word] += 1
    for word, val in doc.items():
        idfDict[word] = math.log10(N / float(val))
    return idfDict                           #计算IDF
def computeTFIDF(tfBow, idfs):
    tfidf = {}
    for word, val in tfBow.items():
        tfidf[word] = val*idfs[word]
    return tfidf                             #计算TFIDF
